#pragma checksum "C:\Users\tomas\source\Workspaces\Spiff\SmsTeknikTutorial\SmsTeknikTutorial\Pages\Guide-HttpGetWrapper.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6ca7ea35153d159173499f0a52e0fb40ffda8321"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(SmsTeknikTutorial.Pages.Pages_Guide_HttpGetWrapper), @"mvc.1.0.razor-page", @"/Pages/Guide-HttpGetWrapper.cshtml")]
namespace SmsTeknikTutorial.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\tomas\source\Workspaces\Spiff\SmsTeknikTutorial\SmsTeknikTutorial\Pages\_ViewImports.cshtml"
using SmsTeknikTutorial;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6ca7ea35153d159173499f0a52e0fb40ffda8321", @"/Pages/Guide-HttpGetWrapper.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"53a3934d9e7d7864b525e5c0edd030f09cd961cc", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Guide_HttpGetWrapper : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "/Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "/CodeExamples", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-primary"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\tomas\source\Workspaces\Spiff\SmsTeknikTutorial\SmsTeknikTutorial\Pages\Guide-HttpGetWrapper.cshtml"
  
    ViewData["Title"] = "HTTP GET Wrapper";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div>\r\n\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6ca7ea35153d159173499f0a52e0fb40ffda83214326", async() => {
                WriteLiteral("Veiledning");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</li>
            <li class=""breadcrumb-item active"" aria-current=""page"">HTTP Get Wrapper</li>
        </ol>
    </nav>

    <h1>HTTP Get Wrapper</h1>


    <p>Dette prinsippet baserer seg på at man kaller en URL med parametere (query string).</p>
    
    <p>Fordelen med denne metoden er at den er veldig enkel å implementere, men ulempen er at den har enkelte bekgrensninger, og kan f.eks bare sende til en mottaker av gangen og støtter heller ikke push leveranserapport.</p>
    
    <p>URL til endepunkt: <a href=""https://api.smsteknik.se/send/"" target=""_blank"">https://api.smsteknik.se/send/</a></p>
    
    <div class=""alert alert-warning"">
        <p><strong>Merk!</strong> Denne metoden tillater brukernavn og passord som parametere direkte i URL, men det er en metode som ikke anbefales ettersom det kan etterlate spor i serverlogger og lignende. Det er derfor langt sikrere å benytte Basic Authentication i header, hvor brukernavn og passord blir beskyttet av ende-til-ende kryptering (SSL).</p>
");
            WriteLiteral(@"        <p>Token for Basic Authentication ble utlevert av SMS Teknik ved etablering av konto, men kan ellers genereres ved å base64 encode <i>brukernavn:passord</i>.</p>
    </div>

    <div class=""alert alert-secondary"">
        <h5 class=""alert-heading"">Eksempel</h5>
        <p>Følgende kall vil sende meldingen <strong>&quot;Dette er en test&quot;</strong> til telefonnummer <strong>(+47) 90000000</strong> fra avsenderen <strong>&quot;Test&quot;</strong>:</p>
        <hr />
        <p><samp>https://api.smsteknik.se/send/?user=[brukernavn]&pass=[passord]&id=[id]&nr=+4790000000&sender=test&msg=Dette%20er%20en%20test</samp></p>
        <hr />
        <p>Brukernavn (<i>user</i>), passord (<i>pass</i>) og firma (<i>id</i>) vil bli utlevert av SmsTeknik ved etablering av konto.</p>
    </div>

    <p>Verdiene må være URL-kodet. Dette gjelder spesielt meldingsinnholdet, brukernavn og avsender.</p>
    <p>Ut over nevnte parametere kan man også angi flash (om det er en blinkende melding), multisms (støtt");
            WriteLiteral(@"e for lange meldinger – flere meldingsdeler), maxmultisms (antall meldingsdeler), operationtype (type SMS, eks vCard, SMS, etc) og senddate/sendtime (tidspunkt for utsendelse).</p>

    <h2>Returverdi</h2>
    <p>I responsen fra kallet mottar man informasjon om status på forespørselen.</p>
    <p>Dersom forespørselen feilet vil man motta en feilkode. Feilkoden er en tekststreng som begynner på 0: etterfulgt av feilmeldingen (eks «0:Access denied»).</p>
    <p>Merk at feilene man får i respons er i hovedsak prevalideringer, som feil på konto eller ugyldig telefonnummer. Vellykket utsendelse er derfor ingen garanti for at meldingen vil nå mottaker, men det er en forutsetning for at den skal bli prosessert videre. Benytt leveranserapporter for å få status på meldingen på veg mot mottaker.</p>
    <p>Dersom utsendelsen er vellykket vil man få en heltallverdi i retur. Denne verdien kalles SMSID, og vil entydig identifisere SMS-en i systemet. Denne verdien brukes blant annet i leveranserapporter, og må derfor");
            WriteLiteral(@" lagres i databasen for fremtidig referanse.</p>
    <div class=""alert alert-info"">
        <strong>Tips!</strong> For å avgjøre om meldingen er prosessert eller feilet kan man sjekke om meldingen som returneres starter med <strong>&quot;0:&quot;</strong>.
    </div>

    <div class=""alert alert-secondary"">
        <h5 class=""alert-heading"">Eksempel</h5>
        <p>Under er et komplett eksempel for utsendelse av SMS med .Net Core. Eksemplet viser også hvordan man utføre feilhåndtering.</p>
        <hr />
        <code>
<pre class=""pre-scrollable"" style='color:#000000;'>
<span style='color:#800000; font-weight:bold; '>using</span> <span style='color:#808030; '>(</span><span style='color:#800000; font-weight:bold; '>var</span> client <span style='color:#808030; '>=</span> <span style='color:#800000; font-weight:bold; '>new</span> System<span style='color:#808030; '>.</span>Net<span style='color:#808030; '>.</span>WebClient<span style='color:#808030; '>(</span><span style='color:#808030; '>)</span><sp");
            WriteLiteral(@"an style='color:#808030; '>)</span>
<span style='color:#800080; '>{</span>
    <span style='color:#696969; '>// It is recommended to use Basic Auth, but it is also possible to add credentials to URL.</span>
    client<span style='color:#808030; '>.</span>Headers<span style='color:#808030; '>[</span><span style='color:#800000; '>""</span><span style='color:#0000e6; '>Authorization</span><span style='color:#800000; '>""</span><span style='color:#808030; '>]</span> <span style='color:#808030; '>=</span> <span style='color:#800000; '>""</span><span style='color:#0000e6; '>Basic [your token]</span><span style='color:#800000; '>""</span><span style='color:#800080; '>;</span>

    <span style='color:#800000; font-weight:bold; '>var</span> result <span style='color:#808030; '>=</span> client<span style='color:#808030; '>.</span>DownloadString<span style='color:#808030; '>(</span><span style='color:#800000; '>""</span><span style='color:#0000e6; '>https://api.smsteknik.se/send/?id=[id]&amp;nr=+4790000000&amp;sender=te");
            WriteLiteral(@"st&amp;msg=Dette%20er%20en%20test</span><span style='color:#800000; '>""</span><span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>

    <span style='color:#800000; font-weight:bold; '>if</span> <span style='color:#808030; '>(</span>result<span style='color:#808030; '>.</span>StartsWith<span style='color:#808030; '>(</span><span style='color:#800000; '>""</span><span style='color:#0000e6; '>0:</span><span style='color:#800000; '>""</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span>
    <span style='color:#800080; '>{</span>
        <span style='color:#696969; '>// Failed.</span>
        <span style='color:#800000; font-weight:bold; '>string</span> errorMessage <span style='color:#808030; '>=</span> result<span style='color:#808030; '>.</span>Substring<span style='color:#808030; '>(</span><span style='color:#008c00; '>2</span><span style='color:#808030; '>,</span> result<span style='color:#808030; '>.</span>Length <span style='color:#808030; '>-</span> ");
            WriteLiteral(@"<span style='color:#008c00; '>2</span><span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>
        Console<span style='color:#808030; '>.</span>WriteLine<span style='color:#808030; '>(</span><span style='color:#800000; '>""</span><span style='color:#0000e6; '>SMS failed with reason: </span><span style='color:#800000; '>""</span> <span style='color:#808030; '>+</span> errorMessage<span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>
    <span style='color:#800080; '>}</span>
    <span style='color:#800000; font-weight:bold; '>else</span>
    <span style='color:#800080; '>{</span>
        <span style='color:#696969; '>// Success</span>
        <span style='color:#800000; font-weight:bold; '>long</span> smsid <span style='color:#808030; '>=</span> Convert<span style='color:#808030; '>.</span>ToInt64<span style='color:#808030; '>(</span>result<span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>
        Console<span style='color:#808030; '");
            WriteLiteral(@">.</span>WriteLine<span style='color:#808030; '>(</span><span style='color:#800000; '>""</span><span style='color:#0000e6; '>SMS successfully sent. SMS ID: </span><span style='color:#800000; '>""</span> <span style='color:#808030; '>+</span> smsid<span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>
    <span style='color:#800080; '>}</span>
<span style='color:#800080; '>}</span>
</pre>
            <!--Created using ToHtml.com on 2021-08-08 18:12:37 UTC -->
        </code>
    </div>

    <h2>Eksempler</h2>
    <p>Under ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6ca7ea35153d159173499f0a52e0fb40ffda832113462", async() => {
                WriteLiteral("Kodeeksempler");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@" kan du laste ned fungerende kodeeksempler på hvordan dette grensesnittet kan implementeres. Eksemplene viser hvordan man sender ut en SMS med ulike parametere, og hvordan man behandler responsen for å avgjøre om meldingen var vellykket.</p>
    <p>Under ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6ca7ea35153d159173499f0a52e0fb40ffda832114876", async() => {
                WriteLiteral("Kodeeksempler");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(" er det også laget en Postman collection som demonstrerer utsendelse av SMS med ulike autentiseringsmetoder. </p>\r\n    \r\n    <p>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6ca7ea35153d159173499f0a52e0fb40ffda832116165", async() => {
                WriteLiteral("Gå til kodeeksempler");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</p>\r\n\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SmsTeknikTutorial.Pages.Guide_HttpGetWrapperModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SmsTeknikTutorial.Pages.Guide_HttpGetWrapperModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SmsTeknikTutorial.Pages.Guide_HttpGetWrapperModel>)PageContext?.ViewData;
        public SmsTeknikTutorial.Pages.Guide_HttpGetWrapperModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
