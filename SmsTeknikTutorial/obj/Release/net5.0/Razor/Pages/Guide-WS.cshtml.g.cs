#pragma checksum "C:\Users\tomas\source\Workspaces\Spiff\SmsTeknikTutorial\SmsTeknikTutorial\Pages\Guide-WS.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f2fc19b3b6bb15ff1bcc2e244e554c8e3edfbb37"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(SmsTeknikTutorial.Pages.Pages_Guide_WS), @"mvc.1.0.razor-page", @"/Pages/Guide-WS.cshtml")]
namespace SmsTeknikTutorial.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\tomas\source\Workspaces\Spiff\SmsTeknikTutorial\SmsTeknikTutorial\Pages\_ViewImports.cshtml"
using SmsTeknikTutorial;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f2fc19b3b6bb15ff1bcc2e244e554c8e3edfbb37", @"/Pages/Guide-WS.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"53a3934d9e7d7864b525e5c0edd030f09cd961cc", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Guide_WS : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "/Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "/Guide-XmlHttp", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "/CodeExamples", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "Guide-DeliveryReports", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-primary"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\tomas\source\Workspaces\Spiff\SmsTeknikTutorial\SmsTeknikTutorial\Pages\Guide-WS.cshtml"
  
    ViewData["Title"] = "Web Service";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<div>\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2fc19b3b6bb15ff1bcc2e244e554c8e3edfbb374870", async() => {
                WriteLiteral("Veiledning");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</li>
            <li class=""breadcrumb-item active"" aria-current=""page"">.Net Web Service (SOAP/XML)</li>
        </ol>
    </nav>

    <h1>.Net Web Service (SOAP/XML)</h1>


    <p>Web servicen baserer seg på SOAP (Simple Object Access Protocol) som er en XML-basert standard utformet av W3C. Objektene og metodene er beskrevet i WSDL (Web Service Description Language).</p>
    <p>Web Service kan benyttes som klassisk web service, eller ved å utføre HTTP POST mot et endepunkt. Fordelen med førstnevnte er at IDE (eks Visual Studio) genererer proxy (klassene og metodene) basert på WSDL, men på sistnevnte må man selv definere objektene og sende dem med HTTP POST mot et endepunkt. Sistnevnte har også veldig store likhetstrekk med grensesnittet ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2fc19b3b6bb15ff1bcc2e244e554c8e3edfbb376786", async() => {
                WriteLiteral("XML over HTTP");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@", og bør heller vurderes dersom man ikke ønsker å benytte en SOAP/XML Web Service.</p>

    <div class=""alert alert-info"">
        <h5 class=""alert-heading"">Tips! Generere proxy</h5>
        <p></p>Flere IDE har fjernet støtte for å generere proxy fra WSDL. Dette gjelder blant annet Visual Studio for Mac og Visual Studio Code.</p>
        <p>NB: For Visual Studio Code for Windows kan man installere WCF (Windows Communication Foundation Client Libraries) for å generere proxy.</p>
        <p>Web Service kodeeksemplene i denne veilederen inneholder implementasjoner av WSDL som kan benyttes for blant annet .Net Framework og .Net Core.  Du kan derfor bruke denne implementasjonen i stedet for å generere din egen.</p>

    </div>

    <h5>URL til endepunkt</h5>

    <dl class=""row"">
        <dt class=""col-sm-3"">Web Service</dt>
        <dd class=""col-sm-9"">https://api.smsteknik.se/send/ws/v1.1/</dd>

        <dt class=""col-sm-3"">HTTP POST</dt>
        <dd class=""col-sm-9"">https://api.smsteknik.se/se");
            WriteLiteral(@"nd/wsxml/</dd>
    </dl>

    <h2>Web Service</h2>

    <p>Web Service har to metoder:</p>
    <ul>
        <li>SendSMSSingle</li>
        <li>SendSMSMulti</li>
    </ul>

    <p>Som navnene indikerer er <i>SendSMSSingle</i> i hovedsak ment for å sende melding til én mottaker, mens <i>SendSMSMulti</i> er beregnet for å sende til flere mottakere samtidig. En annen forskjell er at <i>SendSMSSingle</i> støtter veldig få parametere, og man må benytte <i>SendSMSMulti</i> dersom man ønsker push leveranserapporter, tidsstyring, etc.</p>

    <h5>Sammenligning</h5>

    <table class=""table table-sm"">
        <thead>
            <tr>
                <th scope=""col"">Egenskap</th>
                <th scope=""col"">SendSMSSingle</th>
                <th scope=""col"">SendSMSMulti</th>
                <th scope=""col"">HTTP POST</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Credentials</td>
                <td>&#10003;</td>
                <td>&#10003;</");
            WriteLiteral(@"td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Lange SMS</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Angi avsender</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Flere mottakere</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Type melding (vCard, etc)</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Blinkende melding</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Styrt utl");
            WriteLiteral(@"øpsdato (TTL)</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Planlagt utsendelse</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Komprimert tekst</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Push leveranserapport</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Reply modul</td>
                <td>&nbsp;</td>
                <td>&#10003;</td>
                <td>&#10003;</td>
            </tr>
            <tr>
                <td>Maks antall mottakere <sup>(1)</sup></td>
                <td>1</td>
                <td>2.000</td>
      ");
            WriteLiteral(@"          <td>500</td>
            </tr>
        </tbody>
    </table>

    <p><small><strong>(1)</strong> Maksimum antall mottakere for <i>SendSmsMulti</i> og <i>HTTP POST</i> er basert på anbefaling i dokumentasjonen, men ikke nødvendigvis en sperre.</small></p>

    <div class=""alert alert-info"">
        <strong>TIPS!</strong> I mange tilfeller skal samme SMS sendes til flere mottakere. Det vil da være svært ressursbesparende å legge alle mottakerne av meldingen inn som vist i eksemplet ovenfor, i stedet for å utføre separate kall per SMS som skal sendes. Anbefalt antall mottakere på web service er inntil 2000.
    </div>



    <div class=""alert alert-secondary"">
        <h5 class=""alert-heading"">Eksempel</h5>
        <p>Eksempel på enkel utsendelse av SMS med <i>SendSMSSingle</i>:</p>
        <hr />


<code><pre style='color:#000000;'>
<span style='color:#696969; '>// Initialize the service</span>
<span style='color:#800000; font-weight:bold; '>var</span> service <span style='color:#");
            WriteLiteral(@"808030; '>=</span> <span style='color:#800000; font-weight:bold; '>new</span> se<span style='color:#808030; '>.</span>smsteknik<span style='color:#808030; '>.</span>SendSMSSoapClient<span style='color:#808030; '>(</span>se<span style='color:#808030; '>.</span>smsteknik<span style='color:#808030; '>.</span>SendSMSSoapClient<span style='color:#808030; '>.</span>EndpointConfiguration<span style='color:#808030; '>.</span>SendSMSSoap12<span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>

<span style='color:#696969; '>// Call the method</span>
<span style='color:#800000; font-weight:bold; '>var</span> result <span style='color:#808030; '>=</span> await service<span style='color:#808030; '>.</span>SendSMSSingleAsync<span style='color:#808030; '>(</span>id<span style='color:#808030; '>,</span> user<span style='color:#808030; '>,</span> pass<span style='color:#808030; '>,</span> isMultiSms<span style='color:#808030; '>,</span> <span style='color:#008c00; '>6</span><span style='color:#808030;");
            WriteLiteral(@" '>,</span> <span style='color:#800000; '>""</span><span style='color:#0000e6; '>The quick brown fox</span><span style='color:#800000; '>""</span><span style='color:#808030; '>,</span> <span style='color:#800000; '>""</span><span style='color:#0000e6; '>Test</span><span style='color:#800000; '>""</span><span style='color:#808030; '>,</span> <span style='color:#800000; '>""</span><span style='color:#0000e6; '>+4790000000</span><span style='color:#800000; '>""</span><span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>

<span style='color:#800000; font-weight:bold; '>if</span> <span style='color:#808030; '>(</span>result<span style='color:#808030; '>.</span>StartsWith<span style='color:#808030; '>(</span><span style='color:#800000; '>""</span><span style='color:#0000e6; '>0:</span><span style='color:#800000; '>""</span><span style='color:#808030; '>)</span><span style='color:#808030; '>)</span>
<span style='color:#800080; '>{</span>
    <span style='color:#696969; '>// Error</span>
    <span");
            WriteLiteral(@" style='color:#800000; font-weight:bold; '>var</span> errorMessage <span style='color:#808030; '>=</span> $<span style='color:#800000; '>""</span><span style='color:#0000e6; '>The server returned error: {result.Substring(2)}</span><span style='color:#800000; '>""</span><span style='color:#800080; '>;</span>
<span style='color:#800080; '>}</span>
<span style='color:#800000; font-weight:bold; '>else</span>
<span style='color:#800080; '>{</span>
    <span style='color:#696969; '>// Success!</span>

    <span style='color:#696969; '>// If success the returning value is a smsid.</span>
    <span style='color:#800000; font-weight:bold; '>long</span> smsid <span style='color:#808030; '>=</span> Convert<span style='color:#808030; '>.</span>ToInt64<span style='color:#808030; '>(</span>result<span style='color:#808030; '>)</span><span style='color:#800080; '>;</span>

<span style='color:#800080; '>}</span>
</pre>
<!--Created using ToHtml.com on 2021-08-10 08:51:53 UTC --></code>
  
    </div>

    <h2>Retu");
            WriteLiteral(@"rverdi</h2>
    <p>Når man utfører et metodekall på Web Servicen for å sende en SMS vil man i retur få en status på forespørselen. Formatet på verdiene som returneres er forskjellig fra om man benytter <i>SendSMSSingle</i> eller <i>SendSMSMulti</i>.</p>
    <p>Når man benytter <i>SendSMSSingle</i> (som kun tillater en mottaker) vil man kun få tilbake én verdi for den ene utsendelsen, men for <i>SendSMSMulti</i> (som tillater flere mottakere) vil man få tilbake en XML struktur som gir status for utsendelsen til hver av mottakerne.</p>
    <p>Dersom forespørselen feilet vil man motta en feilkode. Feilkoden er en tekststreng som begynner på 0: etterfulgt av feilmeldingen (eks «0:Access denied»).</p>
    <p>Merk at feilene man får i respons er i hovedsak prevalideringer, som feil på konto eller ugyldig telefonnummer. Vellykket utsendelse er derfor ingen garanti for at meldingen vil nå mottaker, men det er en forutsetning for at den skal bli prosessert videre. Benytt leveranserapporter for å få status på meldi");
            WriteLiteral(@"ngen på veg mot mottaker.</p>
    <p>Dersom utsendelsen er vellykket vil man få en heltallverdi i retur. Denne verdien kalles SMSID, og vil entydig identifisere SMS-en i systemet. Denne verdien brukes blant annet i leveranserapporter, og må derfor lagres i databasen for fremtidig referanse.</p>
    <p>Merk! For enkelte typer feil, som gjelder hele utsendelsen, vil også <i>SendSMSMulti</i> kun returnere en feilkode (og ingen XML struktur). Et slikt eksempel er «0:Access denied». Man må derfor alltid sjekke om responsen begynner på «0:» for å unngå at man parser dette som et XML objekt.</p>

    <div class=""alert alert-secondary"">
        <p>Eksempel på respons fra <i>SendSmsSingle()</i> dersom vellykket:</p>
        <hr />
        <samp>
            1950940234
        </samp>
    </div>
    <div class=""alert alert-secondary"">
        <p>Eksempel på respons fra <i>SendSmsSingle()</i> dersom feilet:</p>
        <hr />
        <samp>
            0:Invalid phonenumber - #+47123#
        </samp>
  ");
            WriteLiteral(@"  </div>

    <div class=""alert alert-secondary"">
        <p>Eksempel på respons fra <i>SendSMSMulti()</i> når den ene meldingen er vellykket mens den andre har ugyldig telefonnummer:</p>
        <hr />
        <pre>
<span style='color:#004a43; '>&lt;?</span><span style='color:#800000; font-weight:bold; '>xml</span><span style='color:#004a43; '> </span><span style='color:#074726; '>version</span><span style='color:#808030; '>=</span><span style='color:#800000; '>""</span><span style='color:#7d0045; '>1.0</span><span style='color:#800000; '>""</span><span style='color:#004a43; '> </span><span style='color:#074726; '>encoding</span><span style='color:#808030; '>=</span><span style='color:#800000; '>""</span><span style='color:#0000e6; '>UTF-8</span><span style='color:#800000; '>""</span><span style='color:#004a43; '> </span><span style='color:#004a43; '>?></span>
<span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>response</span><span style='color:#a65700; '>></span>
        <span style='");
            WriteLiteral(@"color:#a65700; '>&lt;</span><span style='color:#5f5035; '>datetime</span><span style='color:#a65700; '>></span>2021-08-08 15:30:09<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>datetime</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>count</span><span style='color:#a65700; '>></span>0<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>count</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>smsleft</span><span style='color:#a65700; '>></span>40557<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>smsleft</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>sms</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>smsid</span><span style='color:#a65700; '>>");
            WriteLiteral(@"</span>1950940234<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>smsid</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;</span><span style='color:#5f5035; '>smsid</span><span style='color:#a65700; '>></span>0:Invalid Dest Addr<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>smsid</span><span style='color:#a65700; '>></span>
        <span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>sms</span><span style='color:#a65700; '>></span>
<span style='color:#a65700; '>&lt;/</span><span style='color:#5f5035; '>response</span><span style='color:#a65700; '>></span>
        </pre>
    </div>

    <p>Merk at responsen til hver av mottakerne blir returnert fra serveren i samme rekkefølge som gitt i forespørselen.</p>

    <h2>Kodeeksempler</h2>
    <p>Under ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2fc19b3b6bb15ff1bcc2e244e554c8e3edfbb3721534", async() => {
                WriteLiteral("Kodeeksempler");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@" kan du laste ned fungerende kodeeksempler på hvordan dette grensesnittet kan implementeres. Eksemplene viser hvordan man sender ut en SMS med både <i>SendSMSSingle</i> og <i>SendSMSMulti</i>, og hvordan man behandler responsen for å avgjøre om meldingen var vellykket. Eksemplet viser også hvordan man konfigurerer ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2fc19b3b6bb15ff1bcc2e244e554c8e3edfbb3723008", async() => {
                WriteLiteral("leveranserapporer");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(".</p>\r\n    <p>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2fc19b3b6bb15ff1bcc2e244e554c8e3edfbb3724185", async() => {
                WriteLiteral("Gå til kodeeksempler");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</p>\r\n\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SmsTeknikTutorial.Pages.Guide_WSModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SmsTeknikTutorial.Pages.Guide_WSModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<SmsTeknikTutorial.Pages.Guide_WSModel>)PageContext?.ViewData;
        public SmsTeknikTutorial.Pages.Guide_WSModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
